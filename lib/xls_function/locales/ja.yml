ja:
  xls_function:
    descriptions:
      abs: ABS(数値) 数値の絶対値を返します。
      and: AND(条件1, [条件2], ...) すべての引数が TRUE と評価された場合は TRUE を返し、1 つ以上の引数が FALSE と評価された場合は FALSE を返します。
      asc: ASC(文字列) 2 バイト文字セット (DBCS) 言語の場合、全角 (2 バイト) 文字を半角 (1 バイト) 文字に変更します。
      char: CHAR(数値) 数値で指定された文字を返します。
      clean: CLEAN(文字列) 印刷できない文字を文字列からすべて削除します。
      code: CODE(文字列) テキスト文字列内の先頭文字の数値コードを返します。
      concat: CONCAT(テキスト1, [テキスト2],…) 複数の範囲や文字列のテキストを結合します。
      datevalue: DATEVALUE(日付文字列) 文字列として格納された日付を、Excel で日付として認識できるシリアル値に変換します。
      date: DATE(年,月,日) 特定の日付を表す連続したシリアル値を返します。
      day: DAY(シリアル値) シリアル番号で表された、日付の日情報を返します。 日情報は 1 ～ 31 の範囲内の整数で示されます。
      dbcs: DBCS(文字列) 文字列内の半角 (1 バイト) の英数カナ文字を全角 (2 バイト) の文字に変換します。
      edate: EDATE(開始日, 月) 開始日から起算して、指定された月数だけ前または後の日付に対応するシリアル値を返します。
      eomonth: EOMONTH(開始日, 月) 開始日から起算して、指定された月数だけ前または後の月の最終日に対応するシリアル値を返します。
      exact: EXACT(文字列 1, 文字列 2) 2 つの文字列を比較して、まったく同じである場合は TRUE を、そうでない場合は FALSE を返します。
      find: FIND(検索文字列, 対象, [開始位置]) 指定された文字列を他の文字列の中で検索し、その文字列が最初に現れる位置を左端から数え、その番号を返します。既定の言語の設定に関係なく、1 バイト文字も 2 バイト文字も、各文字が常に 1 つとして数えられます。
      fixed: FIXED(数値, [桁数], [桁区切り]) 指定した桁数に四捨五入し、結果をピリオド (.) とカンマ (,) を使って書式設定した文字列に変換して返します。
      hour: HOUR(シリアル値) 時刻から時間の値を返します。 戻り値は 0 (午前 0 時) ～ 23 (午後 11 時) の範囲の整数となります。
      if: IF(論理式, [値が真の場合], [値が偽の場合]) IF 関数を使うと、条件が true または false の場合に、それぞれ別の値を返すことができます。
      ifs: IFS(logical_test1, value_if_true1, [logical_test2, value_if_true2], [logical_test3, value_if_true3],…) 1 つ以上の条件が満たされているかどうかをチェックして、最初の TRUE 条件に対応する値を返します。
      int: INT(数値) 指定された数値を最も近い整数に切り捨てます。
      iserror: ISERROR(テストの対象) テストの対象が任意のエラー値を参照するとき TRUE を返します。
      isnumber: ISNUMBER(テストの対象) テストの対象が数値を参照するとき TRUE を返します。
      lambda: LAMBDA([parameter1, parameter2, ...,] 計算) LAMBDA 関数を使用して、カスタムで再利用可能な関数を作成し、フレンドリ名で呼び出します。※直接利用しないでください。
      left: LEFT(文字列, [文字数]) 文字列の先頭から指定された数の文字を返します。
      len: LEN(文字列) 文字列の文字数を返します。
      let: LET (name1、name_value1、calculation_or_name2、[name_value2、calculation_or_name3...]) 計算結果に名前を割り当てます。 これにより、中間計算、値、定義名などを数式内に格納できます。
      lower: LOWER(文字列) 文字列に含まれる英大文字をすべて小文字に変換します。
      mid: MID(文字列, 開始位置, 文字数) 文字列の指定された位置から指定された文字数の文字を返します。
      minute: MINUTE(シリアル値) 時刻の分を返します。 戻り値は 0 (分) ～ 59 (分) の範囲の整数となります。
      month: MONTH(シリアル値) データに含まれる月をシリアル値で返します。 戻り値は 1 (月) ～ 12 (月) の範囲の整数となります。
      not: NOT(論理値) 引数の値を反転させます。
      now: NOW() 現在の日付と時刻に対応するシリアル値を返します。
      or: OR(論理式1, [論理式2], ...) いずれかの引数が TRUE と評価された場合は TRUE を返し、すべての引数が FALSE と評価された場合は FALSE を返します。
      power: POWER(数値, 指数) 数値のべき乗を返します。
      proper: PROPER(文字列) 英字文字列の単語の先頭の文字、および記号の次の文字を大文字に変換します。 それ以外の英字はすべて小文字にします。
      replace: REPLACE(文字列, 開始位置, 文字数, 置換文字列) 文字列に含まれる、指定された文字数の文字を別の文字に置き換えます。
      rept: REPT(文字列, 繰り返し回数) 文字列を指定された回数だけ繰り返して表示します。
      right: RIGHT(文字列,[文字数]) 文字列の末尾 (右端) から指定された文字数の文字を返します。
      rounddown: ROUNDDOWN(数値, 桁数) 数値を指定された桁数で切り捨てます。
      roundup: ROUNDUP(数値, 桁数) 数値を指定された桁数に切り上げます。
      round: ROUND(数値, 桁数) 数値を四捨五入して指定された桁数にします。
      second: SECOND(シリアル値) 時刻の秒を返します。 戻り値は 0 (秒) ～ 59 (秒) の範囲の整数となります。
      sign: SIGN(数値) 数値の正負を調べます。 戻り値は、数値が正の数のときは 1、0 のときは 0、負の数のときは -1 となります。
      sqrt: SQRT(数値) 正の平方根を返します。
      substitute: SUBSTITUTE(文字列, 検索文字列, 置換文字列, [置換対象]) 文字列に含まれる検索文字列を置換文字列へ置換します。
      text: TEXT(value, format_text) 表示形式コードを使用して数値に書式設定を適用することで、数値の表示方法を変更することができます。
      time: TIME(時, 分, 秒) 指定した時刻に対応する小数を返します。
      timevalue: TIMEVALUE(時刻文字列) 文字列で表された時刻を小数に変換します。
      today: TODAY() 現在の日付に対応するシリアル値を返します。
      trim: TRIM(文字列) 各単語間のスペースは 1 つ残し、不要なスペースをすべて削除します。
      trunc: TRUNC(数値, [桁数]) 数値の小数部を切り捨てて、整数または指定した桁数に変換します。
      unichar: UNICHAR(数値) 指定された数値により参照される Unicode 文字を返します。
      unicode: UNICODE(文字列) 文字列の最初の文字に対応する番号 (コード ポイント) を返します。
      upper: UPPER(文字列) 文字列を大文字に変換します。
      value: VALUE(文字列) 数値を表す文字列を数値に変換します。
      year: YEAR(シリアル値) 日付に対応する年を返します。 戻り値は、1900 (年) ～ 9999 (年) の範囲の整数となります。
      switch: SWITCH(交換する値, 一致する値1...[2-126], 一致する値1...[2-126] がある場合に返す値, 一致する値がない場合に返す値) 最大 126 個の一致する値と結果を評価することができます
    errors:
      out_of_range: 範囲外の値が指定されています。%{value}
      missing_target: 文字列%{source}中に%{target}が見つかりません。
      number_is_negative: "%{label}が負の値になっています。%{number}"
      cannot_convert_to_number: "%{source}は数値に変換できません。"
      cannot_convert_to_date: "%{source}は日付に変換できません。"
      cannot_convert_to_time: "%{source}は時刻に変換できません。"
      cannot_divide_by_zero: "0除算が発生しました。"
      invalid_value_for_function: 値が数式または関数に対して無効です。
